#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <pthread.h>
#include <stdlib.h>
#include <semaphore.h>

// Aléxei Felipe Paim
// 20250264

#define TRAVESSA 10

int cont = 0;


sem_t vazio;
sem_t cheio;	
sem_t mutex;


void seserve(){
	
	cont--;
	sleep(1);
}

void encheTravessa(){

 cont = TRAVESSA;
 sleep(1);

}

void *canibal(void *p){
	int id = (long) p;
	
	
	while(1){
	
		sem_post(&cheio);
		sem_wait(&vazio);
		sem_wait(&mutex);
		seserve();
		sem_post(&mutex);
		sem_post(&vazio);
		printf("Canibal %d servido.\n", id);
		fflush(stdout);
		sleep(1);
	}
}


void *cozinheiro(void *p){
	while(1){
	
	if(cont == TRAVESSA){
		sem_wait(&cheio);	
		sem_wait(&mutex);
		encheTravessa();
		sem_post(&mutex);
		sem_post(&cheio);
		
		printf("Cozinheiro serviu mesa.\n");
		sleep(1);
	}

		
}
}

int main(int argc, char **argv){
	pthread_t td, cz;
	long int i, nc;
 
	

	if(argc < 2){
		printf("%s <número canibais>\n", argv[0]);
		return 0;
	}
	
	sem_init(&vazio, 0,1); // max are empty 
    	sem_init(&cheio,0, TRAVESSA);    // 0 are full
    	sem_init(&mutex, 0,1);   // mutex

	nc = atoi(argv[1]);

	pthread_create(&cz, NULL, cozinheiro, NULL);

	for(i=0; i<nc; i++){
		pthread_create(&td, NULL, canibal, (void*)i);
		pthread_detach(td);
	}

	getchar();

	return 0;
}
